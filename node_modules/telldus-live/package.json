{
  "name": "telldus-live",
  "version": "0.2.1",
  "description": "A node.js module to interface with Telldus Live API",
  "author": {
    "name": "Marshall Rose",
    "email": "mrose17@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/TheThingSystem/node-telldus-live.git"
  },
  "bugs": {
    "url": "https://github.com/TheThingSystem/node-telldus-live/issues"
  },
  "dependencies": {
    "oauth": "~0.9.11",
    "underscore": "1.5.1"
  },
  "keywords": [
    "Telldus"
  ],
  "main": "./telldus-live.js",
  "engines": {
    "node": ">=0.8"
  },
  "readmeFilename": "README.md",
  "readme": "node-telldus-live\n=================\n\nA node.js module to interface with the [Telldus Live API](http://api.telldus.com).\n\nBefore Starting\n---------------\nYou will need a Telldus Live account and OAuth tokens:\n\n- To get a Telldus Live account, go to [login.telldus.com](https://login.telldus.com)\n\n- Once you have a Telldus Live account, go to [api.telldus.com](http://api.telldus.com/keys/index) and _Generate a private token for my user only_.\n\n\nInstall\n-------\n\n    npm install telldus-live\n\nAPI\n---\n\n### Load\n\n    var TelldusAPI = require('telldus-live');\n\n### Login to cloud\n\n    var publicKey    = '...'\n      , privateKey   = '...'\n      , token        = '...'\n      , tokenSecret  = '...'\n      , cloud\n      ;\n\n    cloud = new TelldusAPI.TelldusAPI({ publicKey  : publicKey\n                                      , privateKey : privateKey }).login(function(token, tokenSecret, function(err, user)) {\n      if (!!err) return console.log('login error: ' + err.message);\n\n      // otherwise, good to go!\n      console.log('user: '); console.log(user);\n    }).on('error', function(err) {\n      console.log('background error: ' + err.message);\n    });\n\n### Get device information\n\n    cloud.getDevices(function(err, devices) {\n      if (!!err) return console.log('getDevices: ' + err.message);\n\n      // inspect devices[{}]\n    });\n\n    cloud.getDeviceInfo(device, function(err, device) {\n      if (!!err) return console.log('getDevice: ' + err.message);\n\n      // inspect device{}\n    });\n\n### Create/Modify/Delete device\n\n    cloud.setDeviceName(device, name, function(err, result) {\n    });\n\n    cloud.addDevice(device, clientID, name, protocol, model, function(err, result) {\n    });\n\n    cloud.setDeviceLearn(device, function(err, result) {\n    });\n\n    cloud.setDeviceModel(device, model, function(err, result) {\n    });\n\n    cloud.setDeviceName(device, name, function(err, result) {\n    });\n\n    cloud.setDeviceParameter(device, parameter, value, function(err, result) {\n    });\n\n    cloud.setDeviceProtocol(device, protocol, function(err, result) {\n    });\n\n    cloud.removeDevice(device, function(err, result) {\n    });\n\n\n\n### Device actions\n\n    cloud.bellDevice(device, function(err, result) {\n    });\n\n    cloud.commandDevice(device, method, value, function(err, result) {\n    });\n\n    cloud.dimDevice(device, level, function(err, result) {\n    });\n\n    cloud.onOffDevice(device, onP, function(err, result) {\n    });\n\n    cloud.stopDevice(device, function(err, result) {\n    });\n\n    cloud.upDownDevice(device, upP, function(err, result) {\n    });\n\n### Get sensor information\n\n    cloud.getSensors(function(err, sensors) {\n      if (!!err) return console.log('getSensors: ' + err.message);\n\n      // inspect sensors[{}]\n    });\n\n    cloud.getSensorInfo(sensor, function(err, sensor) {\n      if (!!err) return console.log('getSensor: ' + err.message);\n\n      // inspect sensor{}\n    });\n\n### Modify sensor\n\n    cloud.setSensorName(sensor, name, function(err, reuslt) {\n    });\n\n\nFinally\n-------\n\nEnjoy!\n",
  "homepage": "https://github.com/TheThingSystem/node-telldus-live",
  "_id": "telldus-live@0.2.1",
  "dist": {
    "shasum": "5516edbe6e0c1ef858d5f6b6d57d4f2b2374585b"
  },
  "_from": "telldus-live@",
  "_resolved": "https://registry.npmjs.org/telldus-live/-/telldus-live-0.2.1.tgz"
}
